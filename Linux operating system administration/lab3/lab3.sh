# 1.
# выводит в файл work3.log построчно список всех пользователей в системе в следующем формате: «user NNN has id MM»

cat /etc/passwd | awk -F ':' '{print "user " $1 " has id " $3}' > work3.log


# 2.
# добавляет в файл work3.log строку, содержащую дату последней смены пароля для пользователя root

chage -l root | awk '/Last password change/ {print $NF}' >> work3.log


# 3.
# добавляет в файл work3.log список всех групп в системе (только названия групп) через запятую

cat /etc/group | awk -F ':' '{print $1}' | tr "\n" "," | head --bytes -1 >> work3.log


# 4.
# делает так, чтобы при создании нового пользователя у него в домашнем каталоге создавался файл readme.txt с текстом «Be careful!»

echo "Be careful!" > /etc/skel/readme.txt   # /etc/skel - каталог с дефолтными файлами, которые копируются в домашний каталог каждого пользователя при его создании


# 5.
# создает пользователя u1 с паролем 12345678

useradd -m -p $(openssl passwd -crypt 12345678) u1      # -m - корневая папка в /home


# 6.
# создает группу g1

groupadd g2     # group g1 already exists - в группе g1 находятся пользователи user, u2


# 7.
# делает так, чтобы пользователь u1 дополнительно входил в группу g1

usermod -a -G g2 u1     # -a - чтобы добавлял, а не заменял; -G - чтобы добавлял в дополнительные группы


# 8.
# добавляет в файл work3.log строку, содержащую сведения об идентификаторе и имени 
# пользователя u1 и идентификаторах и именах всех групп, в которые он входит

id u1 >> work3.log


# 9.
# делает так, чтобы пользователь user дополнительно входил в группу g1

usermod -a -G g2 user


# 10.
# добавляет в файл work3.log строку с перечнем пользователей в группе g1 через запятую

cat /etc/group | grep g2 | awk -F ':' '{print $2}' >> work3.log


# 11.
# делает так, что при входе пользователя u1 в систему вместо оболочки bash автоматически 
# запускается /usr/bin/mc, при выходе из которого пользователь возвращается к вводу логина и пароля

usermod -s /usr/bin/mc u1


# 12.
# создает пользователя u2 с паролем 87654321

useradd -m -p $(openssl passwd -crypt 87654321) u3      # так как u2 уже существует


# 13.
# в каталоге /home создает каталог test13, в который копирует файл work3.log два раза с 
# разными именами (work3-1.log и work3-2.log)

mkdir /home/test13
cp work3.log /home/test13/work3-1.log
cp work3.log /home/test13/work3-2.log


# 14.
# сделает так, чтобы пользователи u1 и u2 смогли бы просматривать каталог test13 и читать эти файлы, только пользователь u1 смог бы 
# изменять и удалять их, а все остальные пользователи системы не могли просматривать содержимое каталога test13 и файлов в нем. 
# При этом никто не должен иметь права исполнять эти файлы

chown -R u1:u3 /home/test13

ls -l /home/test13      # выполним, чтобы увидеть текущие права доступа (-rw-r--r--) - требуется изменить доступ для остальных пользователей

chmod -R o-r /home/test13
сhmod -R ugo-x /home/test13


# 15.
# создает в каталоге /home каталог test14, в который любой пользователь системы сможет записать данные, но удалить любой файл сможет 
# только пользователь, который его создал или пользователь u1

mkdir /home/test14
chown -R u1:u3 /home/test14
chmod +t /home/test14
chmod -R og+w /home/test14


# 16.
# копирует в каталог test14 исполняемый файл редактора nano и делает так, чтобы любой 
# пользователь смог изменять с его помощью файлы, созданные в пункте 13

cp /bin/nano /home/test14/nano
chown u1 /home/test14/nano
chmod u+s /home/test14/nano


# 17.
# cоздает каталог test15 и создает в нем текстовый файл /test15/secret_file. Делает так, чтобы содержимое этого файла можно было 
# вывести на экран, используя полный путь, но чтобы узнать имя этого файла было бы невозможно

mkdir /home/test15
chmod ugo-r /home/test15
chmod u-w /home/test15

echo "secret_file_read" > /home/test15/secret_file
chmod u-w /home/test15/secret_file

cat /home/test15/secret_file    # проверяем чтение файла по полному пути

